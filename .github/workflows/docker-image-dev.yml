name: Deploy devdnd5club test

on:
  push:
    branches: [ dev ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install & Build Vue app
        run: |
          cp .env.dev.example .env
          npm ci
          npm run build:dev
        working-directory: ./app

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Maven Install
        run: mvn -B clean install -DskipTests
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: magistrus/dnd5club:latest
      - name: Run Docker to SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            docker stop devdnd5club && docker rm devdnd5club
            docker pull magistrus/dnd5club:latest
            docker run --network dev-dnd5-mysql-new --name devdnd5club -p 9393:8080 -d -e spring.profiles.active=dev -e dbhost=mysql-dev -e dbport=3306  -e dbuser=${{ secrets.DB_USER  }} -e dbpassword=${{ secrets.DB_PASSWORD }} -e emailpassword=${{ secrets.EMAIL_PASSWORD }} -e dbname=dnd5 magistrus/dnd5club
            docker rmi $(docker images --filter "dangling=true" -q --no-trunc) &
